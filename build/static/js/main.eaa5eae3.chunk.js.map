{"version":3,"sources":["constants/actionTypes.js","actions/authActions.js","components/movieheader.js","components/login.js","components/register.js","components/authentication.js","reducers/authReducer.js","reducers/movieReducer.js","stores/store.js","App.js","reportWebVitals.js","index.js"],"names":["Constants","USER_LOGGEDIN","USER_LOGOUT","FETCH_MOVIES","FETCH_MOVIE","SET_MOVIE","submitLogin","data","runtimeEnv","dispatch","fetch","method","headers","Accept","body","JSON","stringify","mode","then","response","ok","Error","statusText","json","res","username","localStorage","setItem","token","type","actionTypes","catch","e","console","log","logoutUser","removeItem","MovieHeader","this","props","Navbar","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","id","Nav","to","Link","disabled","loggedIn","selectedMovie","_id","onClick","logout","bind","Component","connect","state","auth","Login","updateDetails","login","details","password","event","Object","assign","target","value","setState","Form","className","Group","controlId","Label","Control","onChange","placeholder","Button","Register","register","name","Authentication","toggleReg","userNotLoggedIn","showLogin","showReg","userLoggedIn","initialState","getItem","authReducer","action","updated","constants","movies","movieReducer","middlewares","thunk","store","createStore","combineReducers","movie","applyMiddleware","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eaa5eae3.chunk.js","sourcesContent":["const Constants = {\n    USER_LOGGEDIN: 'USER_LOGGEDIN',\n    USER_LOGOUT: 'USER_LOGOUT',\n    FETCH_MOVIES: 'FETCH_MOVIES',\n    FETCH_MOVIE: 'FETCH_MOVIE',\n    SET_MOVIE: 'SET_MOVIE'\n}\n\nexport default Constants;","import actionTypes from '../constants/actionTypes';\nimport runtimeEnv from '@mars/heroku-js-runtime-env'\n\nfunction userLoggedIn(username) {\n    return {\n        type: actionTypes.USER_LOGGEDIN,\n        username: username\n    }\n}\n\nfunction logout() {\n    return {\n        type: actionTypes.USER_LOGOUT\n    }\n}\n\nexport function submitLogin(data) {\n    const env = runtimeEnv();\n    return dispatch => {\n        return fetch(`https://hw3-amanuel.herokuapp.com/users/signin`, {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(data),\n          mode: \"cors\",\n        })\n          .then((response) => {\n            if (!response.ok) {\n              throw Error(response.statusText);\n            }\n            return response.json();\n          })\n          .then((res) => {\n            localStorage.setItem(\"username\", data.username);\n            localStorage.setItem(\"token\", res.token);\n\n            dispatch(userLoggedIn(data.username));\n          })\n          .catch((e) => console.log(e));\n    }\n}\n\nexport function submitRegister(data) {\n    const env = runtimeEnv();\n    return dispatch => {\n        return fetch(`https://hw3-amanuel.herokuapp.com/users/signup`, {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(data),\n          mode: \"cors\",\n        })\n          .then((response) => {\n            if (!response.ok) {\n              throw Error(response.statusText);\n            }\n            return response.json();\n          })\n          .then((res) => {\n            dispatch(submitLogin(data));\n          })\n          .catch((e) => console.log(e));\n    }\n}\n\nexport function logoutUser() {\n    return dispatch => {\n        localStorage.removeItem('username');\n        localStorage.removeItem('token');\n        dispatch(logout())\n    }\n}","import React, { Component } from 'react';\nimport {Navbar, Nav} from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport {connect} from 'react-redux';\nimport {logoutUser} from \"../actions/authActions\";\n\nclass MovieHeader extends Component {\n    logout() {\n        this.props.dispatch(logoutUser());\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\n                    <Navbar.Brand>\n                        Movie App\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav>\n                            <LinkContainer to=\"/movielist\">\n                                <Nav.Link disabled={!this.props.loggedIn}>Movie List</Nav.Link>\n                            </LinkContainer>\n                            <LinkContainer to={'/movie/' + (this.props.selectedMovie ? this.props.selectedMovie._id : '')}>\n                                <Nav.Link disabled={!this.props.loggedIn}>Movie Detail</Nav.Link>\n                            </LinkContainer>\n                            <LinkContainer to=\"/signin\">\n                                <Nav.Link>{this.props.loggedIn ? <button onClick={this.logout.bind(this)}>Logout</button> : 'Login'}</Nav.Link>\n                            </LinkContainer>\n                    </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loggedIn : state.auth.loggedIn,\n        username : state.auth.username,\n        selectedMovie: ''\n    }\n}\n\nexport default connect(mapStateToProps)(MovieHeader);","import React, { Component } from 'react';\nimport { submitLogin } from '../actions/authActions';\nimport { connect } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.updateDetails = this.updateDetails.bind(this);\n        this.login = this.login.bind(this);\n\n        this.state = {\n            details:{\n                username: '',\n                password: ''\n            }\n        };\n    }\n\n    updateDetails(event){\n        let updateDetails = Object.assign({}, this.state.details);\n\n        updateDetails[event.target.id] = event.target.value;\n        this.setState({\n            details: updateDetails\n        });\n    }\n\n    login() {\n        const {dispatch} = this.props;\n        dispatch(submitLogin(this.state.details));\n    }\n\n    render(){\n        return (\n            <Form className='form-horizontal'>\n                <Form.Group controlId=\"username\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control onChange={this.updateDetails} value={this.state.details.username} type=\"email\" placeholder=\"Enter email\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control onChange={this.updateDetails} value={this.state.details.password}  type=\"password\" placeholder=\"Password\" />\n                </Form.Group>\n                <Button onClick={this.login}>Sign in</Button>\n            </Form>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n    }\n}\n\nexport default connect(mapStateToProps)(Login);","import React, { Component} from 'react';\nimport { submitRegister } from '../actions/authActions';\nimport { connect } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\n\nclass Register extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.updateDetails = this.updateDetails.bind(this);\n        this.register = this.register.bind(this);\n        this.state = {\n            details:{\n                name: '',\n                username: '',\n                password: ''\n            }\n        };\n    }\n\n    updateDetails(event){\n        let updateDetails = Object.assign({}, this.state.details);\n\n        updateDetails[event.target.id] = event.target.value;\n        this.setState({\n            details: updateDetails\n        });\n    }\n\n    register(){\n        const {dispatch} = this.props;\n        dispatch(submitRegister(this.state.details));\n    }\n\n    render(){\n        return (\n            <Form className='form-horizontal'>\n                <Form.Group controlId=\"name\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control onChange={this.updateDetails} value={this.state.details.name} type=\"text\" placeholder=\"Name\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"username\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control onChange={this.updateDetails} value={this.state.details.username} type=\"email\" placeholder=\"Enter email\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control onChange={this.updateDetails} value={this.state.details.password}  type=\"password\" placeholder=\"Password\" />\n                </Form.Group>\n                <Button onClick={this.register}>Register</Button>\n            </Form>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n    }\n}\n\nexport default connect(mapStateToProps)(Register);","import React, { Component} from 'react';\nimport { connect } from 'react-redux'\nimport Login from './login';\nimport Register from './register';\nimport { logoutUser } from '../actions/authActions';\n\nclass Authentication extends Component {\n\n    constructor(){\n        super();\n\n        this.state = {\n            toggleReg: false\n        };\n    }\n\n    componentDidMount(){\n\n    }\n\n    showLogin(){\n        this.setState({\n            toggleReg: false\n        });\n    }\n\n    showReg(){\n        this.setState({\n            toggleReg: true\n        });\n    }\n\n    logout(){\n        this.props.dispatch(logoutUser());\n    }\n\n    render(){\n\n        const userNotLoggedIn = (\n            <div>\n                <button onClick={this.showLogin.bind(this)}>Login</button><button onClick={this.showReg.bind(this)}>Register</button>\n                { this.state.toggleReg ? <Register /> : <Login /> }\n            </div>\n        );\n        const userLoggedIn = (<div>Logged in as: {this.props.username} <button onClick={this.logout.bind(this)}>Logout</button></div>);\n\n        return (\n            <div>\n                {this.props.loggedIn ? userLoggedIn : userNotLoggedIn}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loggedIn: state.auth.loggedIn,\n        username: state.auth.username\n    }\n}\n\nexport default connect(mapStateToProps)(Authentication)","import constants from '../constants/actionTypes'\n\nlet initialState = {\n    loggedIn: localStorage.getItem('token') ? true : false,\n    username: localStorage.getItem('username') ? localStorage.getItem('username') : ''\n}\n\nconst authReducer = (state = initialState, action) => {\n\n    var updated = Object.assign({}, state);\n\n    switch (action.type) {\n        case constants.USER_LOGGEDIN:\n            updated['loggedIn'] = true;\n            updated['username'] = action.username;\n            return updated;\n\n        case constants.USER_LOGOUT:\n            updated['loggedIn'] = false;\n            updated['username'] = '';\n            return updated;\n\n        default:\n            return state;\n    }\n}\n\nexport default authReducer","import constants from '../constants/actionTypes'\n\nlet initialState = {\n      movies: [],\n      selectedMovie: null\n}\n\nconst movieReducer = (state = initialState, action) => {\n      let updated = Object.assign({}, state);\n\n      switch(action.type) {\n            case constants.FETCH_MOVIES:\n                  updated['movies'] = action.movies;\n                  updated['selectedMovie'] = action.movies[0];\n                  return updated;\n            case constants.SET_MOVIE:\n                  updated['selectedMovie'] = action.selectedMovie;\n                  return updated;\n            case constants.FETCH_MOVIE:\n                  updated['selectedMovie'] = action.selectedMovie;\n                  return updated;\n            default:\n                  return state;\n      }\n}\n\nexport default movieReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport authReducer from \"../reducers/authReducer\";\nimport movieReducer from \"../reducers/movieReducer\";\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n    const { logger } = require('redux-logger');\n\n    middlewares.push(logger);\n}\n\nconst store = createStore(\n    combineReducers( {\n        auth: authReducer,\n        movie: movieReducer\n    }),\n    applyMiddleware(\n        ...middlewares\n    )\n);\n\nexport default store;","import React from 'react';\nimport './App.css';\nimport MovieHeader from './components/movieheader';\nimport Authentication from './components/authentication';\nimport {HashRouter, Route} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './stores/store';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <HashRouter>\n          <div>\n            <MovieHeader />\n            <Route exact path=\"/\" render={()=><p />}/>\n            <Route exact path=\"/movielist\" render={()=><p />}/>\n            <Route exact path=\"/movie/:movieId\" render={()=><p />}/>\n            <Route path=\"/signin\" render={()=><Authentication />}/>\n          </div>\n        </HashRouter>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}